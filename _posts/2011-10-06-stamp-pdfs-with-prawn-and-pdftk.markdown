---
title: Stamp PDFs with Prawn and Pdftk
author: Seamus
layout: post
categories: technology techresearch
---

In order to generate PDFs with a standard template, Brighter Planet uses a combination of [Prawn](https://github.com/sandal/prawn) and [Pdftk](http://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/).

First, we generate the content pages:

<p>
  <a href="/images/2011-10-06-stamp-pdfs-with-prawn-and-pdftk/content.pdf" title="PDF generated by Prawn">
    <img src="/images/2011-10-06-stamp-pdfs-with-prawn-and-pdftk/content-page1.png" alt="screenshot of PDF generated by Prawn (page 1)" />
    <img src="/images/2011-10-06-stamp-pdfs-with-prawn-and-pdftk/content-page2.png" alt="screenshot of PDF generated by Prawn (page 2)" />
  </a>
</p>

<!-- more start -->

Here's what the code for that looks like:

{% highlight ruby %}
require 'prawn'
Prawn::Document.generate('content.pdf', :top_margin => 126, :right_margin => 72, :bottom_margin => 72, :left_margin => 72) do |pdf|
  pdf.text "Sustainability report for Acme", :size => 18
  pdf.move_down 12
  pdf.text "Executive summary", :style => :bold
  pdf.move_down 12
  pdf.text "Lorem ipsum"
  pdf.start_new_page
  pdf.text "Analysis"
  pdf.move_down 12
  pdf.table([['Lorem', 'ipsum'], ['sit', 'amet']], :width => 468, :header => true)
  pdf.number_pages "Page <page> of <total>", :at => [432, -4], :width => 100
end
{% endhighlight %}

Then we apply our standard template:

<p>
  <a href="/images/2011-10-06-stamp-pdfs-with-prawn-and-pdftk/template.pdf" title="blank Brighter Planet template">
    <img src="/images/2011-10-06-stamp-pdfs-with-prawn-and-pdftk/template.png" alt="screenshot of blank Brighter Planet template" />
  </a>
</p>

Which creates the [final product](/images/2011-10-06-stamp-pdfs-with-prawn-and-pdftk/final.pdf) (94Kb):

<p>
  <a href="/images/2011-10-06-stamp-pdfs-with-prawn-and-pdftk/final.pdf" title="completed sustainability report">
    <img src="/images/2011-10-06-stamp-pdfs-with-prawn-and-pdftk/final-page1.png" alt="screenshot of completed sustainability report (page 1)" />
    <img src="/images/2011-10-06-stamp-pdfs-with-prawn-and-pdftk/final-page2.png" alt="screenshot of completed sustainability report (page 2)" />
  </a>
</p>

Here's the [Pdftk](http://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/) command to do that:

{% highlight console %}
pdftk content.pdf stamp template.pdf output final.pdf
{% endhighlight %}

### Final code ###

{% highlight ruby %}
require 'prawn'
Prawn::Document.generate('content.pdf', :top_margin => 126, :right_margin => 72, :bottom_margin => 72, :left_margin => 72) do |pdf|
  pdf.text "Sustainability report for Acme", :size => 18
  pdf.move_down 12
  pdf.text "Executive summary", :style => :bold
  pdf.move_down 12
  pdf.text "Lorem ipsum"
  pdf.start_new_page
  pdf.text "Analysis"
  pdf.move_down 12
  pdf.table([['Lorem', 'ipsum'], ['sit', 'amet']], :width => 468, :header => true)
  pdf.number_pages "Page <page> of <total>", :at => [432, -4], :width => 100
end

require 'posix/spawn'
::POSIX::Spawn::Child.new 'pdftk', 'content.pdf', 'stamp', 'template.pdf', 'output', 'final.pdf'
{% endhighlight %}

### Why not use Prawn's native <code>:template</code> option? ###

Prawn [currently can't automatically apply a template to every page](http://groups.google.com/group/prawn-ruby/browse_thread/thread/93301df14c7f743d).

You _could_ force it:

{% highlight ruby %}
Prawn::Document.generate('bigger_and_dirtier_final.pdf', [...], :template => 'template.pdf') do |pdf|
  # [...]
  pdf.start_new_page :template => 'template.pdf'
  # [...]
end
{% endhighlight %}

* This is not practical for multi-page tables because you don't control when new pages start.
* The [resulting PDF](/images/2011-10-06-stamp-pdfs-with-prawn-and-pdftk/bigger_and_dirtier_final.pdf) is 200% bigger (180Kb) because the template data is duplicated for every page.
* Prawn's text rendering seems less reliable when using a template. For example, <code>pdf.text "This should be bold", :style => :bold</code> sometimes won't work (sorry for not reproducing that behavior in my example, didn't have time.)
* Finally [you may run into problems with Adobe Reader](https://github.com/sandal/prawn/issues/199).

Bottom line: **Pdftk is more efficient and reliable than the current version of Prawn for stamping templates.**

<!-- more end -->
